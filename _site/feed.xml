<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-11-13T20:25:04+01:00</updated><id>http://localhost:4000/</id><title type="html">Cody’s Page</title><subtitle>Cody Stephenson's personal page. Uses Jekyll for generating static pages.
</subtitle><entry><title type="html">MacBook Adventure</title><link href="http://localhost:4000/blog/2017/11/13/macbook/" rel="alternate" type="text/html" title="MacBook Adventure" /><published>2017-11-13T00:00:00+01:00</published><updated>2017-11-13T00:00:00+01:00</updated><id>http://localhost:4000/blog/2017/11/13/macbook</id><content type="html" xml:base="http://localhost:4000/blog/2017/11/13/macbook/">&lt;p&gt;While browsing around Craigslist a few days ago I found an ad for a 2011 Macbook Pro 15” for $250. Most of these ads are scams/bots, but I always attempt to contact the seller via a spam email account on the rare chance that I may actually get something for a steal. While looking at the pictures, I could tell the machine was physically in great shape.&lt;/p&gt;

&lt;h3 id=&quot;response-from-the-seller&quot;&gt;Response from the seller&lt;/h3&gt;
&lt;p&gt;The seller, a guy who lived two and a half hours from me, said that it was “booting to a green apple logo but still works occasionally”. A few quick google searches indicated that this was likely caused by a &lt;a href=&quot;https://www.apple.com/support/macbookpro-videoissues/&quot;&gt;faulty discrete video card&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-problem&quot;&gt;The Problem&lt;/h3&gt;
&lt;p&gt;I thought it should be simple enough to simply choose not to use the discrete GPU, but even at boot the GPU is checked so it’ll often hang. The Radeon 6770M in these MacBooks fails so often Apple had to issue a recall on the product. Strangely, it seems the integrated Intel HD 3000 graphics chip is just as capable as the Radeon (provided the machine has atleast 8gb of ram, the integrated gpu gets 512mb of memory). Additionally, when booting Windows/Linux the EFI Vars would force the OS to only use the Radeon 6770M card, which kills battery life.&lt;/p&gt;

&lt;p&gt;Overall, the discrete GPU sucks and the integrated GPU works fine. The only downside is the inability to use an external monitor (but that can still be done with USB, etc etc).&lt;/p&gt;

&lt;h3 id=&quot;the-solution&quot;&gt;The Solution&lt;/h3&gt;
&lt;p&gt;A bit deeper into stack overflow questions and mac forums lead me to realize that the existence of the card could be completely hidden via modifying the EFI vars and removing some kexts. There’s a tutorial &lt;a href=&quot;https://forums.macrumors.com/threads/force-2011-macbook-pro-8-2-with-failed-amd-gpu-to-always-use-intel-integrated-gpu-efi-variable-fix.2037591/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After modifying the EFI Vars, the macbook booted into safe mode! I then proceeded to delete the AMD kexts… and it booted normally!&lt;/p&gt;

&lt;h3 id=&quot;the-after&quot;&gt;The After&lt;/h3&gt;
&lt;p&gt;So, I ended up with a heavily upgraded 15” Macbook Pro for $250! The original owner had capped the RAM to 16GB, payed for the upgraded HDD (750gb), and had kept it in a case!Sure, its a bit old but I get the benefit of:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;non-soldered RAM and Hard Drive&lt;/li&gt;
  &lt;li&gt;a laptop that I can easily open and replace the battery, cd/dvd drive, etc&lt;/li&gt;
  &lt;li&gt;a ton of ports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m very happy with the current state of the machine, especially for the price!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/blog_images/macbook.png&quot; alt=&quot;alt text&quot; title=&quot;datBook&quot; /&gt;&lt;/p&gt;</content><author><name>Cody Stephenson</name></author><summary type="html">While browsing around Craigslist a few days ago I found an ad for a 2011 Macbook Pro 15” for $250. Most of these ads are scams/bots, but I always attempt to contact the seller via a spam email account on the rare chance that I may actually get something for a steal. While looking at the pictures, I could tell the machine was physically in great shape.</summary></entry><entry><title type="html">Discord Bots</title><link href="http://localhost:4000/blog/2017/11/11/bots/" rel="alternate" type="text/html" title="Discord Bots" /><published>2017-11-11T00:00:00+01:00</published><updated>2017-11-11T00:00:00+01:00</updated><id>http://localhost:4000/blog/2017/11/11/bots</id><content type="html" xml:base="http://localhost:4000/blog/2017/11/11/bots/">&lt;p&gt;I’ve created a few bots for &lt;a href=&quot;https://discordapp.com/&quot;&gt;Discord&lt;/a&gt;. Most of them use &lt;a href=&quot;https://github.com/Rapptz/discord.py&quot;&gt;discord.py&lt;/a&gt;, but I’ve also been tinkering with &lt;a href=&quot;https://discord.js.org/#/&quot;&gt;discord.js&lt;/a&gt;. They can all be accessed through my &lt;a href=&quot;https://github.com/zenxr?tab=repositories&quot;&gt;GitHub repositories page&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;winston&quot;&gt;Winston&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;bot type: &lt;a href=&quot;https://github.com/Rapptz/discord.py&quot;&gt;discord.py&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;github link: &lt;a href=&quot;https://github.com/zenxr/discord_winston_bot&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Winston was the first bot I created. Additional functionality was added bit by bit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Uses the &lt;a href=&quot;https://github.com/SunDwarf/OWAPI&quot;&gt;OW API&lt;/a&gt; from SunDwarf over at GitHub to display a given player’s top 5 most played and winrates in competitive OverWatch&lt;/li&gt;
  &lt;li&gt;Queries &lt;a href=&quot;http://www.wolframalpha.com/&quot;&gt;WolframAlpha&lt;/a&gt; using the &lt;a href=&quot;https://products.wolframalpha.com/api/&quot;&gt;WolframAlpha API&lt;/a&gt; if the instruction isn’t understood. This results in somewhat of an AI experience, as well as helping with Math problems!&lt;/li&gt;
  &lt;li&gt;Interfaces with the &lt;a href=&quot;https://github.com/Just-Some-Bots/MusicBot&quot;&gt;Music Bot&lt;/a&gt; to easily store and play multiple playlists&lt;/li&gt;
  &lt;li&gt;Provides an easy way of seeing the server’s roles, a specific user’s role, etc.&lt;/li&gt;
  &lt;li&gt;Contains a blacklist feature to handle the occasional abusive user&lt;/li&gt;
  &lt;li&gt;Picks OverWatch an individual OverWatch hero given an optional parameter of hero-type (attack/defense, etc)&lt;/li&gt;
  &lt;li&gt;Generates an entire OverWatch balanced 2-2-2 team at random&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Creating this one has been an awesome learning experience. I’ve used several APIs, new data structures, and implemented the blacklist feature which uses some filo I/O (but only when needed of course).&lt;/p&gt;

&lt;h3 id=&quot;osrs-bot&quot;&gt;OSRS Bot&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;bot type: &lt;a href=&quot;https://github.com/Rapptz/discord.py&quot;&gt;discord.py&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;github link: &lt;a href=&quot;https://github.com/zenxr/discord_winston_bot&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This bot was requested by &lt;a href=&quot;https://www.reddit.com/user/Make2much/&quot;&gt;u/Make2Much&lt;/a&gt; over at reddit. It scrapes the Old-school runescape wikia site for a given monster’s drops. It then simulates an indidual drop for that monster with (pretty accurate!) estimated drop rates if a specific item has an unknown drop rate. I got my first taste of beautiful-soup for web scraping here! Near the top of the file, drop rates and mobs with multiple drops can be configured.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/blog_images/osrsbot.png&quot; alt=&quot;alt text&quot; title=&quot;bot screenshot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dndbot&quot;&gt;DnDBot&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;bot type: &lt;a href=&quot;https://discord.js.org/#/&quot;&gt;discord.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;github link: &lt;a href=&quot;https://github.com/zenxr/dndbot&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is an ongoing project. The goal is to have the bot assist both players and the dungeon master while playing Dungeons and Dragons 5e. This project is a mutual effort between some friends and I. We decided to go with discord.js as they were more comfortable going with javascript, but it’s actually been fun (if challenging) learning to manage the asynchronous manner of nodejs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A reactive interface that displays inventory, skills, and stats for a given character&lt;/li&gt;
  &lt;li&gt;A dice rolling feature capable of rolling multiple types of dice multiple times&lt;/li&gt;
  &lt;li&gt;Can query the &lt;a href=&quot;http://www.dnd5eapi.co/&quot;&gt;D&amp;amp;D 5e API&lt;/a&gt; to search skills, classes, and more&lt;/li&gt;
  &lt;li&gt;Simulate loot drops given a character’s level&lt;/li&gt;
  &lt;li&gt;Can create a folder for each character full of json items to be able to pause/resume play&lt;/li&gt;
  &lt;li&gt;more to come&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/img/blog_images/dndbot.png&quot; alt=&quot;alt text&quot; title=&quot;bot screenshot&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;ow-rss-bot&quot;&gt;OW RSS bot&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;bot type: &lt;a href=&quot;https://github.com/Rapptz/discord.py&quot;&gt;discord.py&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;github link: &lt;a href=&quot;https://github.com/zenxr/discord_rss_bot&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This bot functions as a method of alterting my friends and I on Discord when an &lt;a href=&quot;https://playoverwatch.com/en-us/&quot;&gt;OverWatch&lt;/a&gt; patch occurs. The patch notes are fetched from an RSS feed and pushed to our servers after being converted from html to markdown.&lt;/p&gt;</content><author><name>Cody Stephenson</name></author><summary type="html">I’ve created a few bots for Discord. Most of them use discord.py, but I’ve also been tinkering with discord.js. They can all be accessed through my GitHub repositories page.</summary></entry><entry><title type="html">Blog Creation!</title><link href="http://localhost:4000/blog/2017/11/10/page-creation/" rel="alternate" type="text/html" title="Blog Creation!" /><published>2017-11-10T00:00:00+01:00</published><updated>2017-11-10T00:00:00+01:00</updated><id>http://localhost:4000/blog/2017/11/10/page-creation</id><content type="html" xml:base="http://localhost:4000/blog/2017/11/10/page-creation/">&lt;p&gt;So I’ve finally moved over to jekyll. I’ve wanted to set it up for blogging for a while.&lt;/p&gt;

&lt;h3 id=&quot;about-the-set-up&quot;&gt;About the set up&lt;/h3&gt;
&lt;p&gt;It’s built on some pretty neat stuff.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The page’s theme, as of 11-11-17, is based on the &lt;a href=&quot;https://github.com/aksakalli/jekyll-doc-theme&quot;&gt;jekyll-doc-theme&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;The css is handled by &lt;a href=&quot;http://getbootstrap.com/&quot;&gt;bootstrap&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Cody Stephenson</name></author><summary type="html">So I’ve finally moved over to jekyll. I’ve wanted to set it up for blogging for a while.</summary></entry></feed>